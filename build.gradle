apply plugin: 'java'
apply plugin: 'scala'
apply plugin: 'idea'
apply plugin: 'application'

buildscript {
    repositories {
        jcenter()
    }
    dependencies { classpath 'eu.appsatori:gradle-fatjar-plugin:0.3' }
}

apply plugin: 'eu.appsatori.fatjar'


version='1.0'

project.targetCompatibility = 1.8

mainClassName = 'me.gregd.cineworld.util.JettyBootstrap' //Starts webservice on port 9001 by default

repositories {
  mavenCentral()
  maven { url = 'https://github.com/mandubian/mandubian-mvn/raw/master/snapshots/' }
  maven { url = 'https://github.com/mandubian/mandubian-mvn/raw/master/releases/' }
  maven { url = 'http://repo.typesafe.com/typesafe/releases/' }
  maven { url = 'http://oss.sonatype.org/content/repositories/snapshots/' }
  maven { url = 'http://oss.sonatype.org/content/repositories/releases' }
  maven { url = 'http://download.eclipse.org/rt/eclipselink/maven.repo' }
}

sourceSets {
    main {
        scala {
            srcDir 'src/gen/scala' //thrift generated sources
        }
    }
}

fatJar {
    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
    manifest.attributes('Main-Class': mainClassName)
}

//Deploy origin/master/HEAD to production using ansible. Expects passwordless login for 'grogs' to be setup.
//task deploy(type:Exec, dependsOn: fatJar) {
//    def archivePath = fatJar.archivePath
//    def archiveName = fatJar.archiveName
//    //environment ANSIBLE_FORCE_COLOR: 'true'  //TODO: Add conditional logic for when using color terminal
//    workingDir = './ansible'
//    executable = 'ansible-playbook'
//    args = [
//        '--inventory-file=hosts',
//        '--verbose',
//        "--extra-vars=\"archiveName=${archiveName}\" \"archivePath=${archivePath}\" ",
//        'deploy.yml'
//    ]
//}

//configure(deploy) {
//    group = "Deployment"
//    description = "Deploy the project as-is to production as a fat JAR"
//}


dependencies {
  compile 'org.scala-lang:scala-library:2.11.7'
  compile 'org.scala-lang:scala-compiler:2.11.7'

    //stringmetric for fuzzy string matching
  compile 'com.rockymadden.stringmetric:stringmetric-core_2.11:0.27.4'


  //shapeless for convertion
  compile 'com.chuusai:shapeless_2.11:2.2.4'



    //Database libraries
//  compile 'com.googlecode.flyway:flyway-core:2.1.1'
  compile 'com.typesafe.slick:slick_2.11:2.1.0'
  compile 'com.h2database:h2:1.3.164'

  //compile 'org.threeten:threetenbp:0.7'
  //compile 'joda-time:joda-time:2.2'
  //compile 'com.github.nscala-time:nscala-time_2.10:0.4.0'

  compile 'org.scalaj:scalaj-http_2.11:1.1.5' //Simple HTTP client

  compile 'org.json4s:json4s-native_2.11:3.2.11'
  compile 'org.json4s:json4s-jackson_2.11:3.2.11'

  compile 'org.eclipse.jetty:jetty-webapp:8.1.10.v20130312'

  compile 'org.scalatra:scalatra_2.11:2.3.1'
  testCompile 'org.scalatra:scalatra-scalatest_2.11:2.3.1'
  compile 'org.scalatra:scalatra-json_2.11:2.3.1'

  //For Guava caching and a scala wrapper
  compile 'com.google.guava:guava:14.0'
  compile('org.feijoas:mango_2.11:0.11') {
      exclude module: 'jsr305'
  }
  compile 'com.google.code.findbugs:jsr305:1.3.7'
  
  compile 'com.typesafe.scala-logging:scala-logging-slf4j_2.11:2.1.2'

  compile 'ch.qos.logback:logback-classic:1.0.13'

  //fluent api for ANSI escape codes
  compile 'org.fusesource.jansi:jansi:1.11'

  testCompile 'org.scalatest:scalatest_2.11:1.9.1'

  compile 'org.jsoup:jsoup:1.7.3'

}

